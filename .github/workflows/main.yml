name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      include_check:
        description: 'Include check'
        type: boolean
      upload:
        description: 'Upload Conan packages'
        type: boolean

env:
  CONAN_REVISIONS_ENABLED: 1

jobs:
  builds:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: androidarm
            os: ubuntu-20.04
            script: ./scripts/conan_create_all.py androidarm
            clang_version: 12
          - name: androidarm64
            os: ubuntu-20.04
            script: ./scripts/conan_create_all.py androidarm64
            clang_version: 12
          - name: ios
            os: macos-12
            script: ./scripts/conan_create_all.py ios
            clang_version: 13
          - name: linux
            os: ubuntu-18.04
            script: ./scripts/conan_create_all.py linux
          - name: macos
            os: macos-12
            script: ./scripts/conan_create_all.py macos
            clang_version: 13
          - name: windows
            os: windows-2022
            script: py scripts/conan_create_all.py windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print environment variables
        run: env

      - name: Check formatting
        if: contains(matrix.name, 'android')
        run: |
          clang-format --version
          find . -iname "*.cpp" -or -iname "*.h" | xargs clang-format --dry-run --Werror

      - name: Install required Linux packages
        if: contains(matrix.name, 'android') || matrix.name == 'linux'
        run: sudo apt-get install cppcheck ninja-build python3-setuptools -y

      - name: Install required macOS packages
        if: matrix.name == 'ios' || matrix.name == 'macos'
        run: brew install cppcheck ninja

      - name: 'Download development provisioning profile'
        if: matrix.name == 'ios'
        uses: ssrobins/download-provisioning-profiles@v2
        with:
          bundle-id: '*'
          profile-type: 'IOS_APP_DEVELOPMENT'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Import Code-Signing Certificates
        if: matrix.name == 'ios' || matrix.name == 'macos'
        uses: ssrobins/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATES }}
          p12-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}

      - name: Install Conan
        run: |
          pip3 install conan --pre --upgrade
          conan profile detect

      - name: Print versions
        run: |
          cmake --version
          conan --version

      - name: Set Android NDK
        if: contains(matrix.name, 'android')
        run: echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/23.2.8568313" >> $GITHUB_ENV

      - name: Set Xcode version
        if: matrix.name == 'ios' || matrix.name == 'macos'
        run: sudo xcode-select --switch /Applications/Xcode_13.4.1.app/Contents/Developer

      - name: Run Cppcheck
        if: matrix.name != 'windows'
        run: |
          cppcheck --version
          cppcheck . --force --error-exitcode=1

      - name: Build Debug
        if: github.event.inputs.include_check != 'true'
        run: ${{ matrix.script }} --config Debug

      - name: Build Release
        if: github.event.inputs.include_check != 'true'
        run: ${{ matrix.script }} --config Release

      - name: Install 'Include What You Use'
        if: matrix.clang_version && github.event.inputs.include_check == 'true'
        uses: ssrobins/install-include-what-you-use@main
        with:
          clang_version: ${{ matrix.clang_version }}

      - name: Check includes
        if: matrix.clang_version && github.event.inputs.include_check == 'true'
        run: ${{ matrix.script }} --iwyu

      - name: Remove duplicate Conan packages
        if: matrix.name != 'linux' && github.event.inputs.include_check != 'true'
        run: |
          conan remove "android_sdl/*" --confirm
          conan remove "cmake_utils/*" --confirm

      - name: Conan package upload
        if: (github.ref == 'refs/heads/main' || github.event.inputs.upload == 'true') && github.event.inputs.include_check != 'true'
        run: |
          conan remote add artifactory-ssrobins https://ssrobins.jfrog.io/artifactory/api/conan/conan
          conan remote login --password ${{ secrets.ARTIFACTORY_API_KEY }} artifactory-ssrobins ${{ secrets.ARTIFACTORY_USER }}
          conan upload "*" --remote artifactory-ssrobins --confirm
