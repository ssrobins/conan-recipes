--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -360,6 +360,10 @@
   ${SDL2_SOURCE_DIR}/src/video/*.c
   ${SDL2_SOURCE_DIR}/src/video/yuv2rgb/*.c)
 
+if(IOS)
+   set(SOURCE_FILES ${SOURCE_FILES} ${SDL2_SOURCE_DIR}/src/render/metal/SDL_render_metal.m)
+endif()
+
 
 if(ASSERTIONS STREQUAL "auto")
   # Do nada - use optimization settings to determine the assertion level
@@ -625,6 +629,10 @@
 #  endif()
 endif()
 
+if(NOT IOS)
+  list(APPEND EXTRA_LIBS SDL2main)
+endif()
+
 # TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define
 # anything.
 if(LIBC)
@@ -1451,7 +1459,7 @@
     find_library(IOKIT IOKit)
     list(APPEND EXTRA_LIBS ${IOKIT})
   endif()
-  if(SDL_FRAMEWORK_FF)
+  if(SDL_FRAMEWORK_FF AND NOT IOS)
     find_library(FORCEFEEDBACK ForceFeedback)
     list(APPEND EXTRA_LIBS ${FORCEFEEDBACK})
   endif()
@@ -1584,8 +1592,18 @@
 #   endif()
 # endif()
 
-configure_file("${SDL2_SOURCE_DIR}/include/SDL_config.h.cmake"
-  "${SDL2_BINARY_DIR}/include/SDL_config.h")
+# Since check_function_exists isn't working properly on iOS,
+# the auto-generated SDL_config.h falsely determines several
+# functions exist when they actually don't. As a workaround,
+# use the pre-generated header instead.
+if(IOS)
+  configure_file("${SDL2_SOURCE_DIR}/include/SDL_config_iphoneos.h"
+    "${SDL2_BINARY_DIR}/include/SDL_config.h"
+  )
+else()
+  configure_file("${SDL2_SOURCE_DIR}/include/SDL_config.h.cmake"
+    "${SDL2_BINARY_DIR}/include/SDL_config.h")
+endif()
 
 # Prepare the flags and remove duplicates
 if(EXTRA_LDFLAGS)
@@ -1697,8 +1715,20 @@
 add_library(SDL2main STATIC ${SDLMAIN_SOURCES})
 target_include_directories(SDL2main PUBLIC $<INSTALL_INTERFACE:include>)
 set(_INSTALL_LIBS "SDL2main")
-if (NOT ANDROID)
-  set_target_properties(SDL2main PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+set_target_properties(SDL2main PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+
+if(IOS)
+  set(IOS_FRAMEWORKS
+    "-framework AVFoundation"
+    "-framework CoreGraphics"
+    "-framework CoreMotion"
+    "-framework Foundation"
+    "-framework GameController"
+    "-framework Metal"
+    "-framework OpenGLES"
+    "-framework QuartzCore"
+    "-framework UIKit"
+  )
 endif()
 
 if(SDL_SHARED)
@@ -1724,9 +1754,12 @@
   endif()
   set(_INSTALL_LIBS "SDL2" ${_INSTALL_LIBS})
   target_link_libraries(SDL2 ${EXTRA_LIBS} ${EXTRA_LDFLAGS})
-  target_include_directories(SDL2 PUBLIC $<INSTALL_INTERFACE:include>)
-  if (NOT ANDROID)
-    set_target_properties(SDL2 PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+  target_include_directories(SDL2 PUBLIC
+    $<BUILD_INTERFACE:${SDL2_SOURCE_DIR}/include>
+    $<INSTALL_INTERFACE:include>)
+  set_target_properties(SDL2 PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+  if(IOS)
+    target_link_libraries(SDL2 ${IOS_FRAMEWORKS})
   endif()
 endif()
 
@@ -1750,9 +1783,12 @@
   # libraries - do we need to consider this?
   set(_INSTALL_LIBS "SDL2-static" ${_INSTALL_LIBS})
   target_link_libraries(SDL2-static ${EXTRA_LIBS} ${EXTRA_LDFLAGS})
-  target_include_directories(SDL2-static PUBLIC $<INSTALL_INTERFACE:include>)
-  if (NOT ANDROID)
-    set_target_properties(SDL2-static PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+  target_include_directories(SDL2-static PUBLIC
+    $<BUILD_INTERFACE:${SDL2_SOURCE_DIR}/include>
+    $<INSTALL_INTERFACE:include>)
+  set_target_properties(SDL2-static PROPERTIES DEBUG_POSTFIX ${SDL_CMAKE_DEBUG_POSTFIX})
+  if(IOS)
+    target_link_libraries(SDL2-static ${IOS_FRAMEWORKS})
   endif()
 endif()
 
